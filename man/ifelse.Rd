% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ifelse.R
\name{ifelse}
\alias{ifelse}
\title{Conditional Element Selection}
\usage{
ifelse(test, yes, no, ...)
}
\arguments{
\item{test}{an object which can be coerced to logical mode.}

\item{yes}{return values for true elements of \code{test}.}

\item{no}{return values for false elements of \code{test}.}

\item{...}{further arguments to be passed to \code{\link{cfactor}}.}
}
\value{
If either \code{yes} or \code{no} are of class \code{factor}, 
  the function returns an object of class \code{factor} whereas levels are 
  determined using \code{\link{cfactor}} internally. Otherwise, the base 
  method is called directly.
}
\description{
Conditional Element Selection
}
\details{
A refined version of \code{\link[base]{ifelse}} that allows for
  factor appending.
}
\examples{
f <- factor(c('c','a','a',NA,'b','a'), levels= c('a','b','c'))
base::ifelse(is.na(f), "g", f) # not nice
refactor::ifelse(is.na(f), "g", f) # probably what you wanted
}

